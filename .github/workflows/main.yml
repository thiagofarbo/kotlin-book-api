name: CI-CD

on:
  push:
    branches: ["main"]

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
          cache: maven
      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify
      - uses: actions/checkout@v4.1.1
      - name: Auth to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Build image
        uses: docker/build-push-action@v5.1.0
        with:
          java-version: 17
          context: .
          push: true
          tags: |
            thiago1432/kotlin-book-api:${{github.run_number}}
            thiago1432/kotlin-book-api:latest

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - uses: actions/checkout@v4
      - name: Defining context
        uses: Azure/k8s-set-context@v3.0
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.K8S_CONFIG}}
      - name: Deployment to Cluster Kubernetes
        uses: Azure/k8s-deploy@v4.9
        with: 
          images: thiago1432/kotlin-book-api:${{github.run_number}}
          manifests: |
            k8s/deployment.yml 

  deploy:
    name: 'Deployment'
    runs-on: ubuntu-latest
    needs: [CI, CD]
    timeout-minutes: 10
    steps:
      - name: notify slack
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        if: ${{ failure() }}
        with:
          channel-id: 'F04D4MXFY3R' # slack channel #alerts-test
          payload: |
            {
              "text": "GitHub Action failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Production deployment check failed* :fire_engine:\n High error rate detected after deployment! Rolling back..."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_TOKEN }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
